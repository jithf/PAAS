FORMAT: 1A

# 无道容器云 —— 基于Docker容器的PaaS系统

# Group 鉴权管理

## 用户登陆  [POST /login]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded

	+ Body

	        {
				"username": user,
				"password": 123
			}

	+ Schema

            {
                "username": "用户名，字符串，必填",
				"password": "密码，字符串，必填"
            }

+ Response 200 (application/json)

	+ Headers
	
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA
    
    + Body

	        {
			    "code": 0,
			    "message": "成功",
			    "data": {
			        "userId": "1231451941131",
			        "username": "sys",
			        "email": null,
			        "roleId": 2
			    }
			}

	+ Schema

	        {
				"userId": "用户ID",
				"username": "用户名",
				"email": "用户邮箱",
				"roleId": "用户角色ID"
			}

## 用户注册  [POST /auth/register]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded

	+ Body

	        {
				"username": user,
				"password": 123,
				"email": 752046686@qq.com
			}

	+ Schema

            {
                "username": "用户名，字符串，必填",
				"password": "密码，字符串，必填",
				"email": "邮箱，字符串，必填"
            }		

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": "已经发送验证邮件"
			}

## 邮箱验证  [GET /auth/email{?token}]

+ Parameters

    + token (string, required) - token

+ Response 200 (text/plain)
    
    + Body

	        跳转注册成功页面

## 密码校验  [POST /auth/password/check]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded

	+ Body

	        {
				"username": user,
				"password": 123
			}

	+ Schema

            {
                "username": "用户名，字符串，必填",
				"password": "密码，字符串，必填"
            }

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}
## 注册校验  [POST /auth/register/check]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded

	+ Body

	        {
				"username": user,
				"email": jitwxs@foxmail.com
			}

	+ Schema

            {
                "username": "用户名，字符串，必填",
				"email": "邮箱，字符串，必填"
            }

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

# Group Token管理

## 获取用户信息  [POST /token]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "userId": "1",
			    "username": "sys",
			    "email": null,
			    "roleId": 2
			  }
			}

	+ Schema

	        {
				"userId": "用户ID",
				"username": "用户名",
				"email": "用户邮箱",
				"roleId": "用户角色ID"
			}		

## 获取Token列表（管理员） [GET /token/list]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "term": {
			      "token": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxMjQxNDE0MTI0MTU2IiwicmlkIjoyLCJleHAiOjE1MzE1NTI5MTAsImlhdCI6MTUzMTUzMTMxMCwidGltZXN0YW1wIjoxNTMxNTMxMzEwNDQyfQ.KsLAXB_jKDG2DkGLglEGhKUfwVPl5jUdbRoFm9sg6wn2rF3iqpIxenhhoIQLMDSp632uzk2i3ZxfA69czIUrWQ",
			      "createDate": "2018-07-14 09:21:50"
			    },
			    "sya": {
			      "token": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiJmNGY0YmIxNTJjZjU0ZmVjOTRlYjBkMmIyMmQyNWY3MSIsInJpZCI6MSwiZXhwIjoxNTMxNTUyMzM1LCJpYXQiOjE1MzE1MzA3MzUsInRpbWVzdGFtcCI6MTUzMTUzMDczNTI4OX0.MtaEwVkHv9_CsLl3hekS7d69A0c7bw2kQSLmk6bGK8lYCNnKS1-SuQ2fefIzwVUzOQnFsllwL1qc9ayDP4IFbQ",
			      "createDate": "2018-07-14 09:12:15"
			    }
			  }
			}

## 删除Token（管理员） [DELETE /token/delete/{username}]

+ Parameters

    + username (string, required) - 用户名

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

# Group 项目管理

## 项目列表（管理员） [GET /project/list{?name,userId,username,startDate,endDate,current,size}]

+ Parameters

    + name (string, optional) - 项目名【模糊】
    + userId (string, optional) - 用户ID
    + username (string, optional) - 用户名【模糊】
    + startDate (date, optional) - 记录开始时间
    + endDate (date, optional) - 记录截至时间
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			描述：获取系统所有项目
            示例：/project/list?username=sy&name=项目
            说明：该方法不支持排序

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 2,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "aabakfsvakiuw1213",
			        "userId": "f4f4bb152cf54fec94eb0d2b22d25f71",
			        "name": "项目1",
			        "description": "项目1的描述",
			        "createDate": "2018-06-30 10:14:07",
			        "updateDate": null,
			        "username": "sya"
			      },
			      {
			        "id": "bkjaqalfa231fa",
			        "userId": "1231451941131",
			        "name": "项目2",
			        "description": "项目2的描述",
			        "createDate": "2018-06-30 10:14:16",
			        "updateDate": null,
			        "username": "sys"
			      }
			    ]
			  }
			}

## 项目列表（用户）  [GET /project/self/list{?name,startDate,endDate,current,size}]

+ Parameters

    + name (string, optional) - 项目名【模糊】
    + startDate (date, optional) - 记录开始时间
    + endDate (date, optional) - 记录截至时间
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			描述：获取当前登录的普通用户的所有项目
            示例：/project/self/list?name=Java&current=1&size=5
            说明：该方法不支持排序

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 2,
			    "size": 5,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "51553ff30e644ae78926e22392bf7a98",
			        "userId": "f4f4bb152cf54fec94eb0d2b22d25f71",
			        "name": "JavaWeb01",
			        "description": "第一个JavaWeb环境",
			        "createDate": "2018-07-05 11:02:27",
			        "updateDate": null,
			        "username": "sya"
			      },
			      {
			        "id": "6afcadce648848e49bd976301881e7c5",
			        "userId": "f4f4bb152cf54fec94eb0d2b22d25f71",
			        "name": "JavaWeb01",
			        "description": "第一个JavaWeb环境",
			        "createDate": "2018-07-05 11:02:24",
			        "updateDate": null,
			        "username": "sya"
			      }
			    ]
			  }
			}

## 项目信息 [GET /project/{id}]

+ Parameters

    + id (number, required) - 项目ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "id": "aabakfsvakiuw1213",
			    "userId": "f4f4bb152cf54fec94eb0d2b22d25f71",
			    "name": "项目1",
			    "description": "项目1的描述",
			    "createDate": "2018-06-30 10:14:07",
			    "updateDate": null,
			    "username": "sya"
			  }
			}

## 创建项目（用户） [POST /project/create]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"name": Java Web01,
				"description": 第一个JavaWeb环境
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 更新项目（用户） [PUT /project/update]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"id": 49719f86013348eb866ba431a23050f7,
				"name": Java Web,
				"description": JavaWeb环境
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 删除项目（用户） [DELETE /project/delete/{id}]

+ Parameters

    + id (number, required) - 项目ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			删除项目会使所有子容器没有项目

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 项目日志  [GET /project/log/{?projectId,type,current,size}]

+ Parameters

    + projectId (string, required) - 项目ID
    + type (string, optional) - 日志类型
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			描述：普通用户只能查看自己项目的日志，管理员可以查看任意项目日志
            示例：/project/log?projectId=b2b09405f54c4cf3a9e70b4ec298b31a

+ Response 200 (application/json)
    
    + Body

    		{
 			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 177,
			    "size": 3,
			    "pages": 59,
			    "current": 1,
			    "records": [
			      {
			        "id": "10dfc77a9a894aab871d11a7428c8d05",
			        "type": 22,
			        "description": "开启容器",
			        "objName": "qunidayede",
			        "createDate": "2018-07-20 18:09:37"
			      },
			      {
			        "id": "db5e048aa8434067becf0f969a19fa07",
			        "type": 22,
			        "description": "开启容器",
			        "objName": "power",
			        "createDate": "2018-07-20 18:09:27"
			      },
			      {
			        "id": "fea48026de154fd08c03cabc2320ce44",
			        "type": 22,
			        "description": "开启容器",
			        "objName": "pup",
			        "createDate": "2018-07-20 15:36:47"
			      }
			    ]
			  }
			}

	+ Schema

			{
				"id": "id",
				"type": "类别",
				"description": "描述",
				"objName": "容器或服务名",
				"createDate": "发生时间"
			}

# Group 容器管理

## 用户容器列表  [GET /container/list/{?name,status,current,size}]

+ Parameters

	+ name (string, optional) - 容器名
	+ status (number, optional) - 状态类型
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            描述：普通用户获取本人容器，系统管理员获取所有容器

+ Response 200 (application/json)
    
    + Body

    		{
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 13,
			    "size": 1,
			    "pages": 13,
			    "current": 1,
			    "records": [
			      {
			        "id": "11673d9d97d4b3f3901331e47c09dda6b59faaa63e69d8be9e9e5cb9bc345d41",
			        "projectId": "58d227494a6c4625aa5d15495ae17156",
			        "userId": "34567189513412",
			        "name": "nginxs",
			        "command": null,
			        "port": "{\"80\":[{\"HostIp\":\"0.0.0.0\",\"HostPort\":\"18118\"}]}",
			        "image": "nginx:latest",
			        "status": 0,
			        "env": null,
			        "createDate": "2018-07-21 17:22:07",
			        "updateDate": "2018-07-22 08:33:49",
			        "projectName": "GR",
			        "statusName": "容器关闭",
			        "username": "zy",
			        "ip": "192.168.100.30"
			      }
			    ]
			  }
			}

	+ Schema

			{
				"id": "容器ID",
				"projectId": "项目ID",
				"userId": "用户ID",
				"name": "容器名",
				"command": "启动命令",
				"port": "端口映射",
				"image": "使用镜像名",
				"status": "容器状态",
				"env": "环境变量",
				"createDate": "创建时间",
				"updateDate": "最后操作时间",
				"projectName": "项目名",
				"statusName": "容器状态名",
				"username": "用户名",
				"ip": "容器IP"
			}

## 项目容器列表  [GET /container/project/{projectId}/list{?current,size,orderByField,asc}]

+ Parameters

    + projectId (string, required) - 项目ID
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10
    + orderByField (string, optional) - 排序字段
    + asc (boolean, optional) - 升序：true；降序：false

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			普通用户获取本人项目的容器，系统管理员任意项目的容器

+ Response 200 (application/json)
    
    + Body

    		{
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 6,
			    "size": 1,
			    "pages": 6,
			    "current": 1,
			    "records": [
			      {
			        "id": "11673d9d97d4b3f3901331e47c09dda6b59faaa63e69d8be9e9e5cb9bc345d41",
			        "projectId": "58d227494a6c4625aa5d15495ae17156",
			        "userId": "34567189513412",
			        "name": "nginxs",
			        "command": null,
			        "port": "{\"80\":[{\"HostIp\":\"0.0.0.0\",\"HostPort\":\"18118\"}]}",
			        "image": "nginx:latest",
			        "status": 0,
			        "env": null,
			        "createDate": "2018-07-21 17:22:07",
			        "updateDate": "2018-07-22 08:33:49",
			        "projectName": "GR",
			        "statusName": "容器关闭",
			        "username": "zy",
			        "ip": "192.168.100.30"
			      }
			    ]
			  }
			}

	+ Schema

			{
				"id": "容器ID",
				"projectId": "项目ID",
				"userId": "用户ID",
				"name": "容器名",
				"command": "启动命令",
				"port": "端口映射",
				"image": "使用镜像名",
				"status": "容器状态",
				"env": "环境变量",
				"createDate": "创建时间",
				"updateDate": "最后操作时间",
				"projectName": "项目名",
				"statusName": "容器状态名",
				"username": "用户名",
				"ip": "容器IP"
			}

## 获取容器  [GET /container/{id}]

+ Parameters

    + id (string, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

    		{
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "id": "11673d9d97d4b3f3901331e47c09dda6b59faaa63e69d8be9e9e5cb9bc345d41",
			    "projectId": "58d227494a6c4625aa5d15495ae17156",
			    "userId": "34567189513412",
			    "name": "nginxs",
			    "command": null,
			    "port": "{\"80\":[{\"HostIp\":\"0.0.0.0\",\"HostPort\":\"18118\"}]}",
			    "image": "nginx:latest",
			    "status": 0,
			    "env": null,
			    "createDate": "2018-07-21 17:22:07",
			    "updateDate": "2018-07-22 08:33:49",
			    "projectName": "GR",
			    "statusName": "容器关闭",
			    "username": "zy",
			    "ip": "192.168.100.30"
			  }
			}

	+ Schema

			{
				"id": "容器ID",
				"projectId": "项目ID",
				"userId": "用户ID",
				"name": "容器名",
				"command": "启动命令",
				"port": "端口映射",
				"image": "使用镜像名",
				"status": "容器状态",
				"env": "环境变量",
				"createDate": "创建时间",
				"updateDate": "最后操作时间",
				"projectName": "项目名",
				"statusName": "容器状态名",
				"username": "用户名",
				"ip": "容器IP"
			}

## 获取状态 [GET /container/status/{id}]

+ Parameters

    + id (string, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

    		{
			  "code": 0,
			  "message": "成功",
			  "data": 1
			}

## 创建容器 - WebSocket（用户） [POST /container/create]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"imageId": "e38bc07ac18ee64e6d59cf2eafcdddf9cec2364dfe129fe0af75f1b0194e0c96",
				"containerName": "testContainer",
				"projectId": "b2b09405f54c4cf3a9e70b4ec298b31a",
				"cmdStr": "/bin/bash",
				"envStr": "MYSQL_ROOT_PASSWORD=123456",
				"destinationStr": "/usr/local/aa",
				"portMapStr": {
					"80": "8888",
					"221": "9999"
				}
			}

	+ Schema

            {
				"imageId": 镜像ID，字符串，必填,
				"containerName": 容器名，字符串，必填,
				"projectId": 项目ID，字符串，必填,
				"cmdStr": 执行命令，如若为空，使用默认的命令，多个分号连接,
				"envStr": 环境变量，多个分号连接,
				"destinationStr": 容器内部目录，多个分号连接，选填,
				"portMapStr": 端口映射，Map<String,String> JSON字符串，内部端口必填
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": "正在创建容器"
			}

			{
			    "info":null,
			    "data":{
			        "uid":"f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data":"{\"code\":0,\"message\":\"容器Hello-World二号创建成功\",\"data\":{\"type\":0,\"containerId\":null}}"
			    }
			}

## 开启容器 - WebSocket [GET /container/start/{containerId}]

+ Parameters

    + containerId (string, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /container/start/f0d99bf2945cf1021040a045405b61c2d6fc37e467bb56d61a29416184fedd4b


+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": "正在启动容器"
			}

			{
			    "info":null,
			    "data":{
			        "uid":"f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data":"{\"code\":0,\"message\":\"容器my-HelloWorld启动成功\",\"data\":{\"type\":0,\"containerId\":\"5ada0b4a5dd3dda93b56dcbb076694dc8e34fddd92841557f920bfbc98d00fbf\"}}"
			    }
			}

## 暂停容器 - WebSocket [GET /container/pause/{containerId}]

+ Parameters

    + containerId (string, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /container/pause/f0d99bf2945cf1021040a045405b61c2d6fc37e467bb56d61a29416184fedd4b


+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": "正在暂停容器"
			}

			{
			    "info":null,
			    "data":{
			        "uid":"f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data":"{\"code\":0,\"message\":\"容器我的Nginx暂停成功\",\"data\":{\"type\":0,\"containerId\":\"fba35fda5b0f274ef5132a5ace51406871d18e4111a7755cb1d78c8c9a4fd6f2\"}}"
			    }
			}

## 恢复容器 - WebSocket [GET /container/continue/{containerId}]

+ Parameters

    + containerId (string, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /container/continue/f0d99bf2945cf1021040a045405b61c2d6fc37e467bb56d61a29416184fedd4b


+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": "正在恢复容器"
			}

			{
			    "info":null,
			    "data":{
			        "uid":"f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data":"{\"code\":0,\"message\":\"容器我的Nginx恢复成功\",\"data\":{\"type\":0,\"containerId\":\"fba35fda5b0f274ef5132a5ace51406871d18e4111a7755cb1d78c8c9a4fd6f2\"}}"
			    }

			}

## 停止容器 - WebSocket [GET /container/stop/{containerId}]

+ Parameters

    + containerId (string, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /container/stop/f0d99bf2945cf1021040a045405b61c2d6fc37e467bb56d61a29416184fedd4b


+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": "正在停止容器"
			}

			{
			    "info":null,
			    "data":{
			        "uid":"f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data":"{\"code\":0,\"message\":\"容器我的Nginx关闭成功\",\"data\":{\"type\":0,\"containerId\":\"fba35fda5b0f274ef5132a5ace51406871d18e4111a7755cb1d78c8c9a4fd6f2\"}}"
			    }
			}

## 强制停止容器  - WebSocket [GET /container/kill/{containerId}]

+ Parameters

    + containerId (string, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /container/kill/f0d99bf2945cf1021040a045405b61c2d6fc37e467bb56d61a29416184fedd4b


+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": "正在强制停止容器"
			}

			{
			    "info":null,
			    "data":{
			        "uid":"f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data":"{\"code\":0,\"message\":\"容器我的Nginx强制关闭成功\",\"data\":{\"type\":0,\"containerId\":\"fba35fda5b0f274ef5132a5ace51406871d18e4111a7755cb1d78c8c9a4fd6f2\"}}"
			    }
			}

## 重启容器 - WebSocket [GET /container/restart/{containerId}]

+ Parameters

    + containerId (string, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /container/restart/f0d99bf2945cf1021040a045405b61c2d6fc37e467bb56d61a29416184fedd4b


+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": "正在重启容器"
			}

			{
			    "info":null,
			    "data":{
			        "uid":"f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data":"{\"code\":0,\"message\":\"容器我的Nginx重启成功\",\"data\":{\"type\":0,\"containerId\":\"fba35fda5b0f274ef5132a5ace51406871d18e4111a7755cb1d78c8c9a4fd6f2\"}}"
			    }
			}

## 打包容器 - WebSocket [POST /container/commit]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	    	{
			  "containerId": "容器ID，字符串，必填",
			  "name": "镜像名，字符串，必填",
			  "tag": "标签，字符串，选填，默认为latest"
			}

+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": "开始打包容器"
			}

			{
			    "info":null,
			    "data":{
			        "uid":"f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data":"{\"code\":0,\"message\":\"容器打包成功\",\"data\":{\"type\":0,\"containerId\":\"fba35fda5b0f274ef5132a5ace51406871d18e4111a7755cb1d78c8c9a4fd6f2\"}}"
			    }
			}

## 容器进程  [GET /container/top/{containerId}]

+ Parameters

    + containerId (string, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /container/top/f0d99bf2945cf1021040a045405b61c2d6fc37e467bb56d61a29416184fedd4b


+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "Titles": [
			      "UID",
			      "PID",
			      "PPID",
			      "C",
			      "STIME",
			      "TTY",
			      "TIME",
			      "CMD"
			    ],
			    "Processes": [
			      [
			        "root",
			        "11615",
			        "11603",
			        "0",
			        "11:32",
			        "?",
			        "00:00:00",
			        "nginx: master process nginx -g daemon off;"
			      ],
			      [
			        "101",
			        "11634",
			        "11615",
			        "0",
			        "11:32",
			        "?",
			        "00:00:00",
			        "nginx: worker process"
			      ]
			    ]
			  }
			}

## 删除容器 - WebSocket [DELETE /container/delete/{containerId}]

+ Parameters

    + containerId (string, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /container/delete/f0d99bf2945cf1021040a045405b61c2d6fc37e467bb56d61a29416184fedd4b


+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": "正在删除容器"
			}

## 修改所属项目（用户） [POST /container/changeProject]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	    	{
			  "containerId": "容器ID，字符串，必填",
			  "projectId": "新项目ID，字符串，必填"
			}

+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 调用终端  [POST /container/terminal]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

			{
				"containerId": f868226b2584c93b4ce1b34aef310b5a2125d7564a977b2c8835362ed28e0d9a,
				"cursorBlink": false,
				"rows": 50,
				"cols": 100,
				"width": 100,
				"height": 50,
			}

	+ Schema

            {
				"containerId": "容器ID，必填",
				"cursorBlink": "光标是否闪烁，选填，默认false",
				"rows": "行数，选填，默认50",
				"cols": "列数，选填，默认100",
				"width": "宽度，选填，默认100",
				"height": "高度，选填，默认50",
            }

+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "cursorBlink": false,
			    "rows": 50,
			    "cols": 100,
			    "url": "ws://localhost:9999/ws/container/exec?width=100&height=50&ip=192.168.30.177&port=2375&containerId=f868226b2584c93b4ce1b34aef310b5a2125d7564a977b2c8835362ed28e0d9a"
			  }
			}

	+ Schema

			{
				"cursorBlink": "光标是否闪烁",
			    "rows": "行数",
			    "cols": "列数",
			    "url": "webSocket访问URL"
			}

## 状态同步  [GET /container/sync]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            普通用户同步本人容器，系统管理员同步所有容器

+ Response 200 (application/json)
    
    + Body

	    	{
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "success": 1,
			    "error": 0
			  }
			}

	+ Schema

			{
				"success": "成功数",
			    "error": "失败数"
			}

# Group 镜像管理

## 本地镜像列表 [GET /image/list/local{?type,name,current,size}]

+ Parameters

    + type (number, required) - 镜像类型（取值在【镜像类型列表】API）
    + name (string, optional) - 镜像名
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            描述：获取本地公共镜像，或本地用户公开镜像
            示例：/image/list/local?type=1&name=nginx


+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 1,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "5699ececb21caf07b92cbda9daa1e965407e3793a72000ecbf6b8e8595a0824a",
			        "fullName": "nginx:latest",
			        "name": "nginx",
			        "tag": "latest",
			        "size": 108951970,
			        "type": 1,
			        "userId": null,
			        "hasOpen": null,
			        "virtualSize": 108951970,
			        "labels": "{\"maintainer\":\"NGINX Docker Maintainers <docker-maint@nginx.com>\"}",
			        "cmd": "[\"/bin/sh\",\"-c\",\"#(nop) \",\"CMD [\\\"nginx\\\" \\\"-g\\\" \\\"daemon off;\\\"]\"]",
			        "repo": "library",
			        "parentId": "",
			        "createDate": "2018-07-04 11:28:16",
			        "updateDate": null,
			        "username": null
			      }
			    ]
			  }
			}

	+ Schema
			
			{
				"id": "镜像ID",
		        "fullName": "完整名",
		        "name": "名成",
		        "tag": "Tag",
		        "size": "大小",
		        "type": "类别",
		        "userId": "用户ID",
		        "hasOpen": "是否公开",
		        "virtualSize": "虚拟大小",
		        "labels": "镜像labels",
		        "cmd": "镜像默认启动命令",
		        "repo": "所属仓储",
		        "parentId": "父镜像ID",
		        "createDate": "创建时间",
		        "updateDate": "更新时间",
		        "username": "所属用户名"
			}

## DockerHub镜像列表 [GET /image/list/hub{?name,limit}]

+ Parameters

    + name (string, required) - 镜像名
    + limit (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			描述：从Docker Hub上搜索镜像
            示例：/image/list/hub?name=nginx&limit=5

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": [
			    {
			      "description": "Official build of Nginx.",
			      "is_official": true,
			      "is_automated": false,
			      "name": "nginx",
			      "star_count": 8946
			    },
			    {
			      "description": "Automated Nginx reverse proxy for docker containers",
			      "is_official": false,
			      "is_automated": true,
			      "name": "jwilder/nginx-proxy",
			      "star_count": 1355
			    },
			    {
			      "description": "LetsEncrypt container to use with nginx as proxy",
			      "is_official": false,
			      "is_automated": true,
			      "name": "jrcs/letsencrypt-nginx-proxy-companion",
			      "star_count": 384
			    },
			    {
			      "description": "Bitnami nginx Docker Image",
			      "is_official": false,
			      "is_automated": true,
			      "name": "bitnami/nginx",
			      "star_count": 54
			    },
			    {
			      "description": "Container running Nginx + PHP-FPM capable of pulling application code from git",
			      "is_official": false,
			      "is_automated": true,
			      "name": "richarvey/nginx-php-fpm",
			      "star_count": 583
			    }
			  ]
			}

	+ Schema
			
			{
				"description": "镜像描述",
				"is_official": "是否是官方镜像",
				"is_automated": "是否是自动化的",
				"name": "镜像名",
				"star_count": "star数"
			}

## 个人镜像列表 [GET /image/self{?current,size,orderByField,asc}]

+ Parameters

    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10
    + orderByField (string, optional) - 排序字段
    + asc (boolean, optional) - 升序：true；降序：false

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            描述：获取当前登陆用户的所有本地镜像

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 1,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "592838bf086d4f6cb6f412e0f859f337",
			        "imageId": "3065a4fb90cdd94f30ff575df3cd1f4d6f47261dd06128a5b6d6699d7fc1322d",
			        "fullName": "local/f4f4bb152cf54fec94eb0d2b22d25f71/my-busybox:latest",
			        "name": "my-busybox",
			        "tag": "latest",
			        "size": 1363351,
			        "type": 2,
			        "userId": "f4f4bb152cf54fec94eb0d2b22d25f71",
			        "hasOpen": false,
			        "virtualSize": 1363351,
			        "labels": "null",
			        "cmd": "null",
			        "repo": "local",
			        "parentId": "",
			        "createDate": "2018-07-12 14:21:50",
			        "updateDate": null
			      }
			    ]
			  }
			}

	+ Schema
			
			{
				"id": "镜像ID",
		        "fullName": "完整名",
		        "name": "名成",
		        "tag": "Tag",
		        "size": "大小",
		        "type": "类别",
		        "userId": "用户ID",
		        "hasOpen": "是否公开",
		        "virtualSize": "虚拟大小",
		        "labels": "镜像labels",
		        "cmd": "镜像默认启动命令",
		        "repo": "所属仓储",
		        "parentId": "父镜像ID",
		        "createDate": "创建时间",
		        "updateDate": "更新时间"
			}

## 镜像详情 [GET /image/inspect/{id}]

+ Parameters

    + id (string, required) - 镜像ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /image/inspect/7afb7abcfe5f2c54e9a34ddf70337aa7d207eee2bc172100dc439e97bfebfcee

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "Id": "sha256:7afb7abcfe5f2c54e9a34ddf70337aa7d207eee2bc172100dc439e97bfebfcee",
			    "Parent": "",
			    "Comment": "",
			    "Created": "2018-06-25T12:18:25.578+0000",
			    "Container": "d4c98f5626dec8d9dc329aa1827f4003885f1f33824fee98ec109f00dc1a1c5d",
			    "ContainerConfig": {
			      "Hostname": "d4c98f5626de",
			      "Domainname": "",
			      "User": "",
			      "AttachStdin": false,
			      "AttachStdout": false,
			      "AttachStderr": false,
			      "PortSpecs": null,
			      "ExposedPorts": [
			        "9000/tcp"
			      ],
			      "Tty": false,
			      "OpenStdin": false,
			      "StdinOnce": false,
			      "Env": [
			        "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
			      ],
			      "Cmd": [
			        "/bin/sh",
			        "-c",
			        "#(nop) ",
			        "ENTRYPOINT [\"/portainer\"]"
			      ],
			      "Image": "sha256:8b761605d9080f8481054bc90d959728951b5499f885235a35a2ba94a7a0f665",
			      "Volumes": [
			        "/data"
			      ],
			      "WorkingDir": "/",
			      "Entrypoint": [
			        "/portainer"
			      ],
			      "NetworkDisabled": null,
			      "OnBuild": null,
			      "Labels": {},
			      "MacAddress": null,
			      "HostConfig": null,
			      "StopSignal": null,
			      "Healthcheck": null,
			      "NetworkingConfig": null
			    },
			    "DockerVersion": "18.03.1-ce",
			    "Author": "",
			    "Config": {
			      "Hostname": "",
			      "Domainname": "",
			      "User": "",
			      "AttachStdin": false,
			      "AttachStdout": false,
			      "AttachStderr": false,
			      "PortSpecs": null,
			      "ExposedPorts": [
			        "9000/tcp"
			      ],
			      "Tty": false,
			      "OpenStdin": false,
			      "StdinOnce": false,
			      "Env": [
			        "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
			      ],
			      "Cmd": null,
			      "Image": "sha256:8b761605d9080f8481054bc90d959728951b5499f885235a35a2ba94a7a0f665",
			      "Volumes": [
			        "/data"
			      ],
			      "WorkingDir": "/",
			      "Entrypoint": [
			        "/portainer"
			      ],
			      "NetworkDisabled": null,
			      "OnBuild": null,
			      "Labels": null,
			      "MacAddress": null,
			      "HostConfig": null,
			      "StopSignal": null,
			      "Healthcheck": null,
			      "NetworkingConfig": null
			    },
			    "Architecture": "amd64",
			    "Os": "linux",
			    "Size": 56967692,
			    "VirtualSize": 56967692,
			    "RootFS": {
			      "Type": "layers",
			      "Layers": [
			        "sha256:dd4969f97241b9aefe2a70f560ce399ee9fa0354301c9aef841082ad52161ec5",
			        "sha256:ea8a4c153532b4e66f9250f8fc6f8ed638559b260ad96072676311db71450706"
			      ]
			    }
			  }
			}

## 镜像同步（管理员） [GET /image/sync]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "add": 0,
			    "error": 0,
			    "delete": 0
			  }
			}

	+ Schema

	        {
				"add": "新增记录数",
				"error": "失败记录数",
				"delete": "删除记录数"
			}

## 删除镜像 [DELETE /image/delete/{id}]

+ Parameters

    + id (string, required) - 镜像ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            描述：普通用户只能删除自己上传的镜像，管理员可以删除任意镜像
            示例：/image/delete/7afb7abcfe5f2c54e9a34ddf70337aa7d207eee2bc172100dc439e97bfebfcee

+ Response 200 (application/json)
    
    + Body

	        {
				"code": 0,
				"message": "成功",
				"data": null
			}

## 拉取镜像 - WebSocket [POST /image/pull]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"imageName": jdeathe/centos-ssh
			}

	+ Schema

	        {
				"imageName": "镜像名",
			}

+ Response 200 (application/json)
    
    + Body

			{
			  "code": 0,
			  "message": "成功",
			  "data": "开始拉取镜像"
			}

	        {
				"info": null,
				"data": {
					"uid": "213yuyjgdqweyyj",
					"data": "{\"code\":0,\"message\":\"镜像拉取成功\",\"data\":{\"imageId\":\"a765a471638949218ecb738f77cb018b\",\"type\":1}}"
				}
			}

## 上传镜像 - WebSocket [POST /image/push]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"imageId": e38bc07ac18ee64e6d59cf2eafcdddf9cec2364dfe129fe0af75f1b0194e0c96,
				"username": jitwxs,
				"password": password
			}

	+ Schema

	        {
				"imageId": "镜像ID，必填",
				"username": "Docker Hub用户名，必填",
				"password": "Docker Hub密码，必填"
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": "开始上传镜像"
			}

			{
			    "info": null,
			    "data": {
			        "uid": "f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data": "{\"code\":0,\"message\":\"镜像上传成功，名称为jitwxs/hello-world\",\"data\":{\"imageId\":null,\"type\":1}}"
			    }
			}

## 导出镜像 [GET /image/export/{id}]

+ Parameters

    + id (string, required) - 镜像ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /image/export/e38bc07ac18ee64e6d59cf2eafcdddf9cec2364dfe129fe0af75f1b0194e0c96

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": "http://192.168.30.175:2375/images/hello-world:latest/get"
			}

	+ Schema

	        {
				"code": "状态码",
				"message": "消息",
				"data": "导出URL"
			}

## 导入镜像 - WebSocket [POST /image/import]

+ Request

	+ Headers
	
			enctype: multipart/form-data
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
			  "file": a.tar.gz,
			  "name": my-image,
			  "tag": latest
			}

	+ Schema

            {
			  "file": "文件，文件对象，必填",
			  "name": "镜像名，字符串，必填",
			  "tag": "镜像标签，字符串，选填，默认为latest"
			}

+ Response 200 (application/json)
    
    + Body

			    {
			    "code": 0,
			    "message": "成功",
			    "data": "开始导入镜像"
			}

	        {
			    "info": null,
			    "data": {
			        "uid": "f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data": "{\"code\":0,\"message\":\"镜像导入成功\",\"data\":{\"imageId\":null,\"type\":1}}"
			    }
			}

## 查看History [GET /image/history/{id}]

+ Parameters

    + id (string, required) - 镜像ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /image/history/e38bc07ac18ee64e6d59cf2eafcdddf9cec2364dfe129fe0af75f1b0194e0c96

+ Response 200 (application/json)
    
    + Body

			{
				"code": 0,
				"message": "成功",
				"data": [
					{
						"Id": "sha256:e38bc07ac18ee64e6d59cf2eafcdddf9cec2364dfe129fe0af75f1b0194e0c96",
						"Created": 1523470309,
						"CreatedBy": "/bin/sh -c #(nop)  CMD [\"/hello\"]",
						"Tags": [
							"hello-world:latest"
						],
						"Size": 0,
						"Comment": ""
					},
					{
						"Id": "<missing>",
						"Created": 1523470309,
						"CreatedBy": "/bin/sh -c #(nop) COPY file:3c3ca82dfdb40d30f91a91e2ee953fc0193dc455289fe87fd85219a2c19edcea in / ",
						"Tags": null,
						"Size": 1848,
						"Comment": ""
					}
				]
			}

## 查看暴露接口 [GET /image/{id}/exportPort]

+ Parameters

    + id (string, required) - 镜像ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /image/8758290ce6e34aed9f5735c0c453fc32/exportPort

+ Response 200 (application/json)
    
    + Body

			{
			  "code": 0,
			  "message": "成功",
			  "data": [
			    "80"
			  ]
			}

## 公开私有镜像（用户） [GET /image/share/{id}]

+ Parameters

    + id (string, required) - 镜像ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /image/share/e38bc07ac18ee64e6d59cf2eafcdddf9cec2364dfe129fe0af75f1b0194e0c96

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 取消公开私有镜像（用户） [GET /image/disShare/{id}]

+ Parameters

    + id (string, required) - 镜像ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /image/disShare/e38bc07ac18ee64e6d59cf2eafcdddf9cec2364dfe129fe0af75f1b0194e0c96

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 清理镜像（管理员） [GET /image/clean]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

			{
				"code": 0,
				"message": "成功",
				"data": {
					"success": 0,
					"error": 0
				}
			}

	+ Schema

			{
				"success": "成功记录数",
				"error": "失败记录数"
			}

# Group 网络管理

## 网络列表（管理员） [GET /network/listAll{?hasPublic,current,size,orderByField,asc}]

+ Parameters

	+ hasPublic (boolean, optional) - 是否公共网络
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA
	
+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 1,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "ae736f9a7b14dfcc8fe97bd2f57858078ec827d978eb5569863184b1a5ddcf9e",
			        "name": "none",
			        "scope": "local",
			        "driver": "null",
			        "hasInternal": false,
			        "hasIpv6": false,
			        "labels": "{}",
			        "hasPublic": true,
			        "userId": null,
			        "createDate": "2018-07-14 16:53:51",
			        "updateDate": null
			      }
			    ]
			  }
			}

	+ Schema

			{
				"id": "网络ID",
		        "name": "网络名",
		        "scope": "网络范围",
		        "driver": "网络驱动",
		        "hasInternal": "是否内部",
		        "hasIpv6": "是否开启IPV6",
		        "labels": "标签",
		        "hasPublic": "是否公共",
		        "userId": "如果非公共，所属用户",
		        "createDate": "创建时间",
		        "updateDate": "更新时间"
			}

## 网络列表（用户） [GET /network/list{?type,current,size}]

+ Parameters

	+ type (int, required) - 类型，必填；1：公共网络；2：个人网络；其他：个人网络 + 公共网络
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA
	
	+ Schema

			/network/list?type=1

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 1,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "ae736f9a7b14dfcc8fe97bd2f57858078ec827d978eb5569863184b1a5ddcf9e",
			        "name": "none",
			        "scope": "local",
			        "driver": "null",
			        "hasInternal": false,
			        "hasIpv6": false,
			        "labels": "{}",
			        "hasPublic": true,
			        "userId": null,
			        "createDate": "2018-07-14 16:53:51",
			        "updateDate": null
			      }
			    ]
			  }
			}

	+ Schema

			{
				"id": "网络ID",
		        "name": "网络名",
		        "scope": "网络范围",
		        "driver": "网络驱动",
		        "hasInternal": "是否内部",
		        "hasIpv6": "是否开启IPV6",
		        "labels": "标签",
		        "hasPublic": "是否公共",
		        "userId": "如果非公共，所属用户",
		        "createDate": "创建时间",
		        "updateDate": "更新时间"
			}

## 获取容器网络 [GET /network/container/{id}]

+ Parameters

	+ id (string, required) - 容器ID，必填

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": [
			    {
			      "id": "41a16e7347b8470aae5466b4d5b84c2f",
			      "containerId": "11673d9d97d4b3f3901331e47c09dda6b59faaa63e69d8be9e9e5cb9bc345d41",
			      "networkId": "a1502826e75b8c0e8f6d27c2a9737c2f4d7f4f36b8398f1ee9bc08e6a7d43dc1",
			      "createDate": "2018-07-21 19:18:14",
			      "network": {
			        "id": "a1502826e75b8c0e8f6d27c2a9737c2f4d7f4f36b8398f1ee9bc08e6a7d43dc1",
			        "name": "bridge",
			        "scope": "local",
			        "driver": "bridge",
			        "hasInternal": false,
			        "hasIpv6": false,
			        "labels": "{}",
			        "hasPublic": true,
			        "userId": null,
			        "createDate": "2018-07-21 19:17:01",
			        "updateDate": null
			      }
			    }
			  ]
			}

	+ Schema

			{
			      "id": "记录ID",
			      "containerId": "容器ID",
			      "networkId": "网络ID",
			      "createDate": "连接网络时间",
			      "network": {
			        "id": "网络ID",
			        "name": "网络名",
			        "scope": "网络范围",
			        "driver": "网络驱动",
			        "hasInternal": "是否内部",
			        "hasIpv6": "是否开启IPV6",
			        "labels": "标签",
			        "hasPublic": "是否公共",
			        "userId": "如果非公共，所属用户",
			        "createDate": "创建时间",
			        "updateDate": "更新时间"
			      }
			    }

## 同步容器网络 [GET /network/sync/container/{id}]

+ Parameters

	+ id (string, required) - 容器ID，必填

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "add": 1,
			    "delete": 0
			  }
			}

	+ Schema

			{
				"add": "新增网络数",
				"delete": "移除网络数"
			}

## 创建公共网络（管理员） [POST /network/public/create]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA
	
	+ Body

			{
				"name" : "网络名，字符串，只能由字母+数字组成，必填",
				"driver" : "网络驱动，字符串，必填",
				"labelsStr" : "标签，Map<String, String>字符串，选填",
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 创建个人网络（用户） [POST /network/self/create]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA
	
	+ Body

			{
				"name" : "网络名，字符串，只能由字母+数字组成，必填",
				"driver" : "网络驱动，字符串，必填",
				"labelsStr" : "标签，Map<String, String>，选填"
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 删除网络 [POST /network/delete]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

    + Body

	        {
			  "ids": "111,222,333"
			}

	+ Schema

			{
				"ids": "网络ID字符串，多个逗号分隔"
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 连接网络（用户） [POST /network/connect]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

			{
				"containerId": fba35fda5b0f274ef5132a5ace51406871d18e4111a7755cb1d78c8c9a4fd6f2,
				"networkId": 87c070ce8c5b4d9b9a177aaacee3d3e37cc675e9204f480857f32e609c9343a8
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 取消连接网络（用户） [POST /network/disConnect]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA


	+ Body

			{
				"containerId": fba35fda5b0f274ef5132a5ace51406871d18e4111a7755cb1d78c8c9a4fd6f2,
				"networkId": 87c070ce8c5b4d9b9a177aaacee3d3e37cc675e9204f480857f32e609c9343a8
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 网络同步（管理员） [GET /network/sync]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "code": 0,
			    "message": "成功",
			    "data": {
			      "add": 3,
			      "error": 0,
			      "delete": 0
			    }
			  }
			}

	+ Schema

			{
		      "add": "新增记录数",
		      "error": "失败记录数",
		      "delete": "删除记录数"
		    }

# Group 服务管理

## 服务列表 [GET /service/list{?current,size,orderByField,asc}]

+ Parameters

    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10
    + orderByField (string, optional) - 排序字段
    + asc (boolean, optional) - 升序：true；降序：false

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA
	
	+ Schema

			说明：管理员获取所有服务列表，普通用户获取个人服务列表

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 2,
			    "size": 1,
			    "pages": 2,
			    "current": 1,
			    "records": [
			      {
			        "id": "w0getgx6ecbjtqct30eeqg5wl",
			        "projectId": "9946b01701a54ceeb1811360763a02c3",
			        "name": "swarm",
			        "fullName": "1021207315149336577-swarm",
			        "userId": "1021207315149336577",
			        "replicas": 2,
			        "command": null,
			        "port": "{\"8080\":11115}",
			        "image": "tomcat:7",
			        "env": null,
			        "createDate": "2018-07-23 15:00:29",
			        "updateDate": "2018-07-23 15:00:43",
			        "projectName": "test",
			        "statusName": null,
			        "ip": "192.168.100.42"
			      }
			    ]
			  }
			}

## 项目服务列表 [GET /service/{projectId}/list{?current,size,orderByField,asc}]

+ Parameters

	+ projectId (string, required) - 项目id，必填
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10
    + orderByField (string, optional) - 排序字段
    + asc (boolean, optional) - 升序：true；降序：false

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA
	
	+ Schema

			说明：管理员获取任意项目服务列表，普通用户获取个人项目服务列表

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 1,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "qjm4luj57mnto57rmm9hkpu2e",
			        "projectId": "aabakfsvakiuw1213",
			        "name": "my-nginx",
			        "replicas": 3,
			        "command": null,
			        "port": "8080",
			        "image": "nginx",
			        "env": null,
			        "createDate": "2018-07-07 15:06:01",
			        "updateDate": "2018-07-07 15:06:01",
			        "projectName": "项目1",
			        "statusName": "服务运行",
			        "ip": "192.168.100.42"
			      }
			    ]
			  }
			}

## 获取服务 [GET /service/{id}]

+ Parameters

    + id (string, required) - 服务ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA
	
	+ Schema

			描述：获取单条服务记录
			示例：/service/qjm4luj57mnto57rmm9hkpu2e

+ Response 200 (application/json)
    
    + Body

			{
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "id": "qjm4luj57mnto57rmm9hkpu2e",
			    "projectId": "aabakfsvakiuw1213",
			    "name": "my-nginx",
			    "replicas": 3,
			    "command": null,
			    "port": "8080",
			    "image": "nginx",
			    "env": null,
			    "createDate": "2018-07-07 15:06:01",
			    "updateDate": "2018-07-07 15:06:01",
			    "projectName": "项目1",
			    "statusName": "服务运行",
			    "ip": "192.168.100.42"
			  }
			}

## 服务详情 [GET /service/inspect/{id}]

+ Parameters

    + id (string, required) - 服务ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

			{
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "ID": "ty96r15ym9plybgzqiib48shu",
			    "Version": {
			      "Index": 3223
			    },
			    "CreatedAt": "2018-07-15T01:35:24.370+0000",
			    "UpdatedAt": "2018-07-15T01:35:24.375+0000",
			    "Spec": {
			      "Name": "my-nginx",
			      "Labels": {},
			      "TaskTemplate": {
			        "ContainerSpec": {
			          "Image": "nginx:latest@sha256:a65beb8c90a08b22a9ff6a219c2f363e16c477b6d610da28fe9cba37c2c3a2ac",
			          "Hostname": null,
			          "Labels": {},
			          "Command": null,
			          "Args": null,
			          "Env": null,
			          "Dir": null,
			          "User": null,
			          "Groups": null,
			          "TTY": null,
			          "Mounts": null,
			          "StopGracePeriod": null,
			          "Healthcheck": null,
			          "Hosts": null,
			          "Secrets": null,
			          "Configs": null,
			          "DNSConfig": {
			            "Nameservers": null,
			            "Search": null,
			            "Options": null
			          }
			        },
			        "Resources": {
			          "Limits": {
			            "NanoCPUs": null,
			            "MemoryBytes": null
			          },
			          "Reservations": {
			            "NanoCPUs": null,
			            "MemoryBytes": null
			          }
			        },
			        "RestartPolicy": null,
			        "Placement": {
			          "Constraints": null,
			          "Preferences": null
			        },
			        "Networks": null,
			        "LogDriver": null
			      },
			      "Mode": {
			        "Replicated": {
			          "Replicas": 1
			        },
			        "Global": null
			      },
			      "UpdateConfig": null,
			      "Networks": null,
			      "EndpointSpec": {
			        "Mode": "vip",
			        "Ports": [
			          {
			            "Name": null,
			            "Protocol": "tcp",
			            "TargetPort": 80,
			            "PublishedPort": 6666,
			            "PublishMode": "ingress"
			          }
			        ]
			      }
			    },
			    "Endpoint": {
			      "Spec": {
			        "Mode": "vip",
			        "Ports": [
			          {
			            "Name": null,
			            "Protocol": "tcp",
			            "TargetPort": 80,
			            "PublishedPort": 6666,
			            "PublishMode": "ingress"
			          }
			        ]
			      },
			      "ExposedPorts": null,
			      "Ports": [
			        {
			          "Name": null,
			          "Protocol": "tcp",
			          "TargetPort": 80,
			          "PublishedPort": 6666,
			          "PublishMode": "ingress"
			        }
			      ],
			      "VirtualIPs": [
			        {
			          "NetworkID": "t2ye8lph77t8to5eiu2tw0y0p",
			          "Addr": "10.255.0.5/16"
			        }
			      ]
			    },
			    "UpdateStatus": null
			  }
			}

## 删除服务 - WebSocket [DELETE /service/delete/{id}]

+ Parameters

    + id (string, required) - 服务ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": "开始删除服务"
			}

			{
				"info": null,
				"data": {
					"uid": "agfag13131",
					"data": "{\"code\":0,\"message\":\"删除服务成功\",\"data\":{\"type\":3,\"serviceId\":\"tx6tvjzote80f7osukx8mqu27\"}}"
				}
			}

## 创建服务 - WebSocket（用户） [POST /service/create/]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"imageId": "e38bc07ac18ee64e6d59cf2eafcdddf9cec2364dfe129fe0af75f1b0194e0c96",
				"serviceName": "myNginx",
				"projectId": "b2b09405f54c4cf3a9e70b4ec298b31a",
				"cmdStr": "a;b",
				"envStr": "qq;xx",
				"destinationStr: "/usr/local/a;/usr/local/b"
				"replicas": 1,
				"portMapStr": {
					"80": "8888",
					"221": "9999"
				},
				"labelsStr": {
					"auther": "jitwxs"
				}
			}

	+ Schema

            {
				"imageId": "镜像ID，字符串，必填",
				"serviceName": "服务名，字符串，必填，由数字和字母组成",
				"projectId": "项目ID，字符串，必填",
				"cmdStr": "执行命令，多个分号分隔，选填",
				"envStr": "环境变量，多个分号分隔，选填",
				"destinationStr": "内部目录，多个分号分隔，选填",
				"replicas": "横向扩展个数，数字，选填，默认为1",
				"portMapStr": "端口Map<String, String> JSON字符串，暴露端口必填，其余端口选填",
				"labelsStr": "标签Map<String, String> JSON字符串，选填"
			}

+ Response 200 (application/json)
    
    + Body

			{
			  "code": 0,
			  "message": "成功",
			  "data": "开始创建服务"
			}

			{
			    "info": null,
			    "data": {
			        "uid": "f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data": "{\"code\":0,\"message\":\"服务创建成功\",\"data\":{\"type\":3,\"serviceId\":\"u35nanea8kax0j5tdfblk6kmm\"}}"
			    }
			}

## 修改所属项目（用户） [POST /service/changeProject]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
			  "serviceId": "aaaa",
			  "projectId": "xxxx"
			}

	+ Schema

			{
				"serviceId": 服务ID，字符串，必填,
				"projectId": 新项目ID，字符串，必填
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}


## 横向扩展 [POST /service/scale]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
			  "id": "9h7oy6ey1f49d916u3wse4u26",
			  "num": 2
			}

	+ Schema

			{
				"id": 服务ID，字符串，必填,
				"num": 横向扩展数目，数字，必填
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

# Group Hub管理

## 镜像名称列表 [GET /hub/list]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA
	
	+ Schema

			获取本地Hub上所有镜像名称

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": [
			    {
			      "name": "f4f4bb152cf54fec94eb0d2b22d25f71/my-busybox",
			      "username": "sya",
			      "repo": "192.168.100.94:5000",
			      "showName": "my-busybox"
			    }
			  ]
			}

	+ Schema

	        {
				"name": "镜像名，查询Tag时使用",
				"username": "上传用户",
				"repo": "所在仓库",
				"showName": "镜像名，展示用"
			}

## 镜像Tag列表 [GET /hub/list/name{?name}]

+ Parameters

    + name (string, required) - 镜像名

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": [
			    {
			      "id": 1,
			      "fullName": "a:latest",
			      "name": "a",
			      "tag": "latest",
			      "userId": null,
			      "digest": "vafafagabaff",
			      "repo": "av",
			      "createDate": "2018-07-05 17:07:23",
			      "updateDate": null
			    },
			    {
			      "id": 2,
			      "fullName": "a:v1.2",
			      "name": "a",
			      "tag": "v1.2",
			      "userId": null,
			      "digest": "agabanhbaf",
			      "repo": "afaf",
			      "createDate": "2018-07-05 17:07:35",
			      "updateDate": null
			    }
			  ]
			}

## 上传镜像 - WebSocket [POST /hub/push]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"imageId": e38bc07ac18ee64e6d59cf2eafcdddf9cec2364dfe129fe0af75f1b0194e0c96
			}

	+ Schema

            {
				"imageId": "本地镜像ID，字符串，必填"
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": "开始上传镜像"
			}

			{
			    "info": null,
			    "data": {
			        "uid": "f4f4bb152cf54fec94eb0d2b22d25f71",
			        "data": "{\"code\":0,\"message\":\"镜像上传成功\",\"data\":{\"type\":2,\"hubImageId\":\"1341b2e998f34c089b26d0f27a9afb95\"}}"
			    }
			}

## 拉取镜像 - WebSocket [POST /hub/pull]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"id": e38bc07ac18ee64e6d59cf2eafcdddf9cec2364dfe129fe0af75f1b0194e0c96
			}

	+ Schema

            {
				"id": "镜像ID，字符串，必填"
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": "开始拉取镜像"
			}

			{
				"info": null,
				"data": {
					"uid": "afafaf24131",
					"data": "{\"code\":0,\"message\":\"成功\",\"data\":{\"imageId\":\"9728b90629ed48beb769c6d2c3183683\",\"type\":2}}"
				}
			}

## 删除镜像 （管理员） [DELETE /hub/delete/{id}]

+ Parameters

    + id (number, required) - 镜像ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			描述：逻辑删除，具体删除需要进入终端

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 镜像同步（管理员） [GET /hub/sync]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "add": 0,
			    "error": 0,
			    "delete": 3
			  }
			}

	+ Schema

            {
				"add": "新增记录数",
			    "error": "错误记录数",
			    "delete": "删除记录数"
			}

# Group 数据卷管理

## 查看容器/服务数据卷  [GET /volumes/list/obj{?objId,current,size,orderByField,asc}]

+ Parameters

    + objId (string, required) - 容器或服务ID
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10
    + orderByField (string, optional) - 排序字段
    + asc (boolean, optional) - 升序：true；降序：false

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

			{
				"code": 0,
				"message": "成功",
				"data": {
					"total": 1,
					"size": 10,
					"pages": 1,
					"current": 1,
					"records": [
						{
							"id": "1fe1579799064fb08e50f689826d50ff",
							"objId": "63ec66f93e85246a1e7aa5e18c01ed9de19db9ad453d83836be60de315a3c82e",
							"name": "7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19",
							"destination": "/var",
							"source": "/var/lib/docker/volumes/7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19/_data",
							"type": 1,
							"createDate": "2018-07-21 16:36:21",
							"updateDate": null,
							"typeName": "容器数据卷",
							"objName": "demo-java",
							"volume": {
								"Name": "7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19",
								"Driver": "local",
								"DriverOpts": null,
								"Options": {doc.api},
								"Labels": null,
								"Mountpoint": "/var/lib/docker/volumes/7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19/_data",
								"Scope": "local",
								"Status": null
							}
						}
					]
				}
			}

	+ Schema

			{
				"id": "数据卷ID",
				"objId": "容器/服务ID",
				"name": "数据卷名",
				"destination": "容器内路径"
				"source": "数据卷路径",
				"type": "数据卷类型",
				"createDate": "创建时间",
				"updateDate": "更新时间",
				"typeName": "数据卷类型名",
				"objName": "容器/服务名",
				"volume": {
					"Name": "数据卷名",
					"Driver": "数据卷驱动",
					"DriverOpts": null,
					"Options": {},
					"Labels": null,
					"Mountpoint": "挂载点",
					"Scope": "范围",
					"Status": "状态"
				}
			}

## 数据卷详情 [GET /volumes/inspect/id/{id}]

+ Parameters

    + id (number, required) - 数据卷ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "id": "1fe1579799064fb08e50f689826d50ff",
			    "objId": "63ec66f93e85246a1e7aa5e18c01ed9de19db9ad453d83836be60de315a3c82e",
			    "name": "7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19",
			    "destination": "/var",
			    "source": "/var/lib/docker/volumes/7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19/_data",
			    "type": 1,
			    "createDate": "2018-07-21 16:36:21",
			    "updateDate": null,
			    "typeName": "容器数据卷",
			    "objName": "demo-java",
			    "volume": {
			      "Name": "7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19",
			      "Driver": "local",
			      "DriverOpts": null,
			      "Options": {},
			      "Labels": null,
			      "Mountpoint": "/var/lib/docker/volumes/7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19/_data",
			      "Scope": "local",
			      "Status": null
			    }
			  }
			}

	+ Schema

			{
				"id": "数据卷ID",
				"objId": "容器/服务ID",
				"name": "数据卷名",
				"destination": "容器内路径"
				"source": "数据卷路径",
				"type": "数据卷类型",
				"createDate": "创建时间",
				"updateDate": "更新时间",
				"typeName": "数据卷类型名",
				"objName": "容器/服务名",
				"volume": {
					"Name": "数据卷名",
					"Driver": "数据卷驱动",
					"DriverOpts": null,
					"Options": {},
					"Labels": null,
					"Mountpoint": "挂载点",
					"Scope": "范围",
					"Status": "状态"
				}
			}

## 数据卷详情 [GET /volumes/inspect/name/{name}]

+ Parameters

    + name (string, required) - 数据卷名称

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			/volumes/inspect/id/22710dba2e16487795655e68e56be8e9

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "id": "1fe1579799064fb08e50f689826d50ff",
			    "objId": "63ec66f93e85246a1e7aa5e18c01ed9de19db9ad453d83836be60de315a3c82e",
			    "name": "7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19",
			    "destination": "/var",
			    "source": "/var/lib/docker/volumes/7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19/_data",
			    "type": 1,
			    "createDate": "2018-07-21 16:36:21",
			    "updateDate": null,
			    "typeName": "容器数据卷",
			    "objName": "demo-java",
			    "volume": {
			      "Name": "7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19",
			      "Driver": "local",
			      "DriverOpts": null,
			      "Options": {},
			      "Labels": null,
			      "Mountpoint": "/var/lib/docker/volumes/7b857db47618bc0135e658fa2fbe396854ce0f6dca1a482090af9f048b96cd19/_data",
			      "Scope": "local",
			      "Status": null
			    }
			  }
			}

	+ Schema

			{
				"id": "数据卷ID",
				"objId": "容器/服务ID",
				"name": "数据卷名",
				"destination": "容器内路径"
				"source": "数据卷路径",
				"type": "数据卷类型",
				"createDate": "创建时间",
				"updateDate": "更新时间",
				"typeName": "数据卷类型名",
				"objName": "容器/服务名",
				"volume": {
					"Name": "数据卷名",
					"Driver": "数据卷驱动",
					"DriverOpts": null,
					"Options": {},
					"Labels": null,
					"Mountpoint": "挂载点",
					"Scope": "范围",
					"Status": "状态"
				}
			}

## 上传文件 - WebSocket [POST /volumes/upload]

+ Request

	+ Headers
	
			enctype: multipart/form-data
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"id": "22710dba2e16487795655e68e56be8e9",
				"file": 文件
			}

	+ Schema

            {
				"id": "数据卷ID，字符串，必填",
				"file": 要上传的文件
			}

+ Response 200 (application/json)
    
    + Body

	        {
			    "code": 0,
			    "message": "成功",
			    "data": "开始上传文件"
			}

            {
				"info": null,
				"data": {
					"uid": "afaba31231451",
					"data": "{\"code\":0,\"message\":\"文件上传成功\",\"data\":{\"volumeId\":\"00c3120a2e7345cc8e37e53bee385355\",\"type\":5}}"
				}
			}

## 获取本地数据卷（管理员） [GET /volumes/list/{type}]

+ Parameters

    + type (number, required) - 数据卷类型，数字，必填

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "Volumes": [
			      {
			        "Name": "cfd6566969059ce18f4e7b34bb011458395d81df6af6fc445db82c3fa02acd31",
			        "Driver": "local",
			        "DriverOpts": null,
			        "Options": {},
			        "Labels": null,
			        "Mountpoint": "/var/lib/docker/volumes/cfd6566969059ce18f4e7b34bb011458395d81df6af6fc445db82c3fa02acd31/_data",
			        "Scope": "local",
			        "Status": null
			      },
			      {
			        "Name": "5707b93721f8913e39315d3eec3e77f8096949fe80c1a61a78b5213fae8add42",
			        "Driver": "local",
			        "DriverOpts": null,
			        "Options": {},
			        "Labels": null,
			        "Mountpoint": "/var/lib/docker/volumes/5707b93721f8913e39315d3eec3e77f8096949fe80c1a61a78b5213fae8add42/_data",
			        "Scope": "local",
			        "Status": null
			      }
			    ],
			    "Warnings": null
			  }
			}

## 清理本地数据卷（管理员） [DELETE /volumes/clean/{type}]

+ Parameters

    + type (number, required) - 数据卷类型，数字，必填

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			描述：逻辑删除，具体删除需要进入终端

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "fail": 5,
			    "success": 8
			  }
			}


	+ Schema

			{
				"fail": "失败数",
				"success": "成功数"
			}

# Group 用户管理

## 用户列表（管理员）  [GET /user/list{?id,username,email,hasFreeze,startDate,endDate,current,size,orderByField,asc}]

+ Parameters

    + id (string, optional) - 用户ID
    + username (string, optional) - 用户名
    + email (string, optional) - 邮箱
    + hasFreeze (boolean, optional) - 冻结true；活跃：false
    + startDate (date, optional) - 注册开始时间
    + endDate (date, optional) - 注册截至时间
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10
    + orderByField (string, optional) - 排序字段
    + asc (boolean, optional) - 升序：true；降序：false

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

            /user/list?email=qq&hasFreeze=true


+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 2,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "3241513613121",
			        "username": "666",
			        "password": "$2a$10$dIvHWSbeUqUiQDyNoSpOAes.Zl9zCLXSJbYejXkPTbUVlLxlgsNFa",
			        "email": "2212557736@qq.com",
			        "hasFreeze": true,
			        "roleId": 2,
			        "createDate": "2018-06-30 01:25:11",
			        "updateDate": "2018-06-30 16:42:40"
			      },
			      {
			        "id": "4151361367131",
			        "username": "18083764688",
			        "password": "123456",
			        "email": "827622690@qq.com",
			        "hasFreeze": true,
			        "roleId": 1,
			        "createDate": "2018-06-30 09:43:29",
			        "updateDate": "2018-06-30 16:42:40"
			      }
			    ]
			  }
			}

## 冻结用户（管理员） [POST /user/freeze]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"ids": 4151361367131,3241513613121
			}

	+ Schema

            {
				"ids": "用户数组，字符串，至少一个",
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": 2
			}

	+ Schema

            {
			  "code": "状态码",
			  "message": "消息",
			  "data": "成功影响用户数"
			}

## 取消冻结用户（管理员） [POST /user/cancelFreeze]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"ids": 4151361367131,3241513613121
			}

	+ Schema

            {
				"ids": "用户数组，字符串，至少一个",
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": 2
			}

	+ Schema

            {
			  "code": "状态码",
			  "message": "消息",
			  "data": "成功影响用户数"
			}

## 退出登录 [GET /user/logout]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

# Group 通知管理

## 获取个人通知 [GET /notice/list{?type,current,size}]

+ Parameters

    + type (number, optional) - 通知类别，为null时获取所有
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 2,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "2a61c8627b8f4eb3a6d0e220c07bc19c",
			        "noticeId": "153178888518721",
			        "receive": "34567189513412",
			        "hasRead": false,
			        "sender": "afaba31231451",
			        "senderName": "wxsa",
			        "type": 1,
			        "title": "安全告警",
			        "content": "无道云提醒您:10.105.120.243服务器发现有来自122.96.41.51的异地登录行为。服务器疑似被黑客入侵.",
			        "createDate": "2018-07-17 08:54:45",
			        "typeName": "系统通知"
			      },
			      {
			        "id": "21c5c1a4d1b7495a8ae1e59419f47479",
			        "noticeId": "153178852863393",
			        "receive": "34567189513412",
			        "hasRead": false,
			        "sender": "afaba31231451",
			        "senderName": "wxsa",
			        "type": 1,
			        "title": "安全告警",
			        "content": "无道云提醒您:10.105.120.243服务器发现有来自122.96.41.51的异地登录行为。服务器疑似被黑客入侵.",
			        "createDate": "2018-07-17 08:48:48",
			        "typeName": "系统通知"
			      }
			    ]
			  }
			}

	+ Schema

            {
				"id": "通知详情ID",
		        "noticeId": "通知ID",
		        "receive": "接受用户",
		        "hasRead": "是否已读",
		        "sender": "发送用户ID",
		        "senderName": "发送用户名",
		        "type": "通知类型",
		        "title": "通知标题",
		        "content": "通知内容",
		        "createDate": "发送时间",
		        "typeName": "通知类型名"
			}

## 发送通知（管理员） [POST /notice/send]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
			  "title": "安全告警",
			  "content": "无道云提醒您:10.105.120.243服务器发现有来自122.96.41.51的异地登录行为。服务器疑似被黑客入侵.",
			  "type": 1,
			  "sendAll": false,
			  "receivers": ["11"]
			}

	+ Schema

			{
				"title": 通知标题,
				"content": 通知内容,
				"type": 通知类型,
				"sendAll": 是否全体发送,
				"receivers": 接收用户，字符串数组，全体发送时该参数无效
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": "开始发送通知"
			}

			{
				"info": null,
				"data": {
					"uid": "afaba31231451",
					"data": "{\"code\":0,\"message\":\"通知发送成功，预计发送数：1，实际发送数：1\",\"data\":{\"type\":4}}"
				}
			}

## 获取个人发送记录（管理员） [GET /notice/send/list{?type,current,size}]

+ Parameters

    + type (number, optional) - 通知类别，为null时获取所有
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 2,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "153178888518721",
			        "sender": "afaba31231451",
			        "type": 1,
			        "title": "安全告警",
			        "content": "无道云提醒您:10.105.120.243服务器发现有来自122.96.41.51的异地登录行为。服务器疑似被黑客入侵.",
			        "hasAll": false,
			        "createDate": "2018-07-17 08:54:45"
			      },
			      {
			        "id": "153178852863393",
			        "sender": "afaba31231451",
			        "type": 1,
			        "title": "安全告警",
			        "content": "无道云提醒您:10.105.120.243服务器发现有来自122.96.41.51的异地登录行为。服务器疑似被黑客入侵.",
			        "hasAll": true,
			        "createDate": "2018-07-17 08:48:48"
			      }
			    ]
			  }
			}

## 获取通知详情 （管理员） [GET /notice/{id}]

+ Parameters

    + id (string, required) - 通知ID，字符串

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "id": "2a61c8627b8f4eb3a6d0e220c07bc19c",
			    "noticeId": "153178888518721",
			    "receive": "34567189513412",
			    "receiveName": "zy",
			    "hasRead": false,
			    "sender": "afaba31231451",
			    "senderName": null,
			    "type": 1,
			    "title": "安全告警",
			    "content": "无道云提醒您:10.105.120.243服务器发现有来自122.96.41.51的异地登录行为。服务器疑似被黑客入侵.",
			    "createDate": "2018-07-17 08:54:45",
			    "typeName": "系统通知"
			  }
			}

## 未读通知数 [GET /notice/countUnRead]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": 2
			}


## 已读通知 [POST /notice/read]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

			{
				ids: ["111","222"]
			}

	+ Schema

			{
				ids: "通知详细ID数组"
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 已读所有通知 [POST /notice/readAll]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 删除通知 [POST /notice/delete]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
			  "ids": "11,22,33"
			}
	
	+ Schema

			{
				ids: "通知ID，多个使用逗号拼接"
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}


# Group 监控管理

# 系统日志（管理员） [GET /monitor/log{?userId,type,hasException,startDate,endDate,current,size}]

+ Parameters

    + userId (string, optional) - 用户ID
    + type (number, optional) - 日志类别
    + hasException (boolean, optional) - 有异常true；无异常：false
    + startDate (date, optional) - 记录开始时间
    + endDate (date, optional) - 记录截至时间
    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 1,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": "9e01d9dad0634e64977cd063e5c97e6d",
			        "userId": "afaba31231451",
			        "type": 61,
			        "description": "创建公共网络失败",
			        "action": "/network/public/create",
			        "method": "POST",
			        "ip": "192.168.100.142",
			        "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0",
			        "param": null,
			        "exception": "Request error: POST http://192.168.100.30:2375/networks/create: 500, body: {\"message\":\"This node is not a swarm manager. Use \\\"docker swarm init\\\" or \\\"docker swarm join\\\" to connect this node to swarm and try again.\"}\n",
			        "createDate": "2018-07-18 17:12:43",
			        "username": "wxsa",
			        "hasException": true
			      }
			    ]
			  }
			}

	+ Schema

            {
				"id": "日志ID",
		        "userId": "用户ID",
		        "type": "日志类别",
		        "description": "日志描述",
		        "action": "操作URL",
		        "method": "请求方式",
		        "ip": "请求IP",
		        "userAgent": "用户代理",
		        "param": "请求参数",
		        "exception": "异常信息",
		        "createDate": "请求时间",
		        "username": "用户名"
			}

## 宿主机信息（管理员） [GET /monitor/host]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "hostName": "bogon",
			    "architecture": "x86_64",
			    "osName": "CentOS Linux 7 (Core)",
			    "cupNum": 1,
			    "memorySize": 0.95,
			    "dockerVersion": "17.09.0-ce",
			    "imageNum": 37,
			    "containerNum": 20,
			    "containerRunningNum": 3,
			    "containerPauseNum": 0,
			    "containerStopNum": 17,
			    "time": "2018-07-22 08:52:25",
			    "nodes": [
			      {
			        "hostName": "bogon",
			        "architecture": "x86_64",
			        "dockerVersion": "17.09.0-ce",
			        "ip": "192.168.100.104",
			        "state": "ready",
			        "hasLeader": false
			      },
			      {
			        "hostName": "bogon",
			        "architecture": "x86_64",
			        "dockerVersion": "17.09.0-ce",
			        "ip": "192.168.100.238",
			        "state": "ready",
			        "hasLeader": false
			      },
			      {
			        "hostName": "bogon",
			        "architecture": "x86_64",
			        "dockerVersion": "17.09.0-ce",
			        "ip": "192.168.100.42",
			        "state": "ready",
			        "hasLeader": true
			      }
			    ],
			    "serviceNum": 16
			  }
			}

	+ Schema

            {
				"hostName": "主机名",
			    "architecture": "系统架构",
			    "osName": "操作系统",
			    "cupNum": "CPU数目",
			    "memorySize": "内存大小，GB",
			    "dockerVersion": "Docker版本",
			    "imageNum": "镜像数目",
			    "containerNum": "容器数目",
			    "containerRunningNum": "容器运行数目",
			    "containerPauseNum": "容器暂停数目",
			    "containerStopNum": "容器停止数目",
			    "time": "数据获取时间",
			    "serviceNum": "服务数"
			}

			{
				"hostName": "节点主机名",
				"architecture": "节点架构",
				"dockerVersion": "Docker版本",
				"ip": "IP地址",
				"state": "状态",
				"hasLeader": "是否是Leader节点"
			}

## 自身信息 [GET /monitor/self/info]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			获取当前登录用户的使用信息

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "lastLogin": "2018-07-20 20:03:52",
			    "ip": "192.168.100.142",
			    "projectNum": 0,
			    "containerNum": 0,
			    "containerRunningNum": 0,
			    "containerPauseNum": 0,
			    "containerStopNum": 0,
			    "uploadImageNum": 0,
			    "hubImageNum": 0,
			    "serviceNum": 0
			  }
			}

	+ Schema

            {
				"lastLogin": "最后登录时间",
				"ip": "登录IP",
			    "projectNum": "项目数目",
			    "containerNum": "容器数目",
			    "containerRunningNum": "容器运行数目",
			    "containerPauseNum": "容器暂停数目",
			    "containerStopNum": "容器停止数目",
			    "uploadImageNum": "上传镜像数目",
			    "hubImageNum": "Hub镜像数目"
			}

## 用户信息（管理员） [GET /monitor/{userId}/info]

+ Parameters

    + userId (string, required) - 用户ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			/monitor/f4f4bb152cf54fec94eb0d2b22d25f71/info

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "lastLogin": "2018-07-11 09:35:16",
			    "projectNum": 7,
			    "containerNum": 1,
			    "containerRunningNum": 0,
			    "containerPauseNum": 0,
			    "containerStopNum": 1,
			    "uploadImageNum": 3,
			    "hubImageNum": 0
			  }
			}

## 容器实时监控  [GET /monitor/container/actual/{containerId}]

+ Parameters

    + containerId (number, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			获取最近15分钟的数据，粒度：5秒

+ Response 200 (application/json)
    
    + Body

	        {
			    "code": 0,
			    "message": "成功",
			    "data": [
			        {
			            "timestamp": 1531055397276,
			            "rxBytes": 0.003,
			            "txBytes": 0.002,
			            "rxPackets": 22,
			            "txPackets": 10,
			            "cpuUtilization": 0,
			            "memoryUsage": 1.375,
			            "memoryLimit": 974.566,
			            "memoryUtilization": 0.141,
			            "blockRead": 14.063,
			            "blockWrite": 0
			        },
			        {
			            "timestamp": 1531055397276,
			            "rxBytes": 0.003,
			            "txBytes": 0.002,
			            "rxPackets": 22,
			            "txPackets": 10,
			            "cpuUtilization": 0,
			            "memoryUsage": 1.375,
			            "memoryLimit": 974.566,
			            "memoryUtilization": 0.141,
			            "blockRead": 14.063,
			            "blockWrite": 0
			        }
			    ]
			}

	+ Schema

            {
				"timestamp": "时间戳",
				"rxBytes": "网络入带宽，Mbps",
				"txBytes": "网络出带宽，Mbps",
				"rxPackets": "网络入包量，个/秒",
				"txPackets": "网络出包量，个/秒",
				"cpuUtilization": "CPU利用率，百分比",
				"memoryUsage": "内存使用量，Mb",
				"memoryLimit": "内存限制，Mb",
				"memoryUtilization": "内存使用率，百分比",
				"blockRead": "本地读流量，MB",
				"blockWrite": "本地写流量，MB"
			}

## 容器24小时监控  [GET /monitor/container/today/{containerId}]

+ Parameters

    + containerId (number, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			获取最近24小时的数据，粒度：5分钟

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": false
			}
      
## 容器7日监控 [GET /monitor/container/week/{containerId}]

+ Parameters

    + containerId (number, required) - 容器ID

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			获取最近7天的数据，粒度：1小时

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": false
			}

## Portainer监控（管理员） [GET /monitor/portainer]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": "192.168.100.30:9000"
			}

## Visualizer监控（管理员） [GET /monitor/visualizer]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": "192.168.100.42:8080"
			}

# Group 端口管理

## 端口是否使用 [GET /port/hasUse/{port}]

+ Parameters

    + port (number, required) - 端口号

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Schema

			检查一个端口是否可用

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": false
			}

	+ Schema

            {
				"code": "状态码",
				"message": "消息",
				"data": "True：被使用；False：未被使用"
			}

## 获取一个可用端口 [GET /port/random]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": 29459
			}

	+ Schema

            {
				"code": "状态码",
				"message": "消息",
				"data": "端口号"
			}

# Group 程序管理

## 程序列表（管理员） [GET /program/list{?current,size,orderByField,asc}]

+ Parameters

    + current (number, optional) - 页码，默认为1
    + size (number, optional) - 页面容量，默认为10
    + orderByField (string, optional) - 排序字段
    + asc (boolean, optional) - 升序：true；降序：false

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "total": 3,
			    "size": 10,
			    "pages": 1,
			    "current": 1,
			    "records": [
			      {
			        "id": 1,
			        "name": "后端项目",
			        "remark": "PaaS系统后台服务",
			        "ip": "192.168.100.142",
			        "port": "9999",
			        "createDate": "2018-07-12 16:02:25",
			        "updateDate": null
			      },
			      {
			        "id": 2,
			        "name": "Nginx服务",
			        "remark": null,
			        "ip": "192.168.100.142",
			        "port": "8888",
			        "createDate": "2018-07-12 16:02:55",
			        "updateDate": null
			      },
			      {
			        "id": 3,
			        "name": "数据库服务",
			        "remark": "MySQL",
			        "ip": "192.168.100.142",
			        "port": "3306",
			        "createDate": "2018-07-12 16:03:16",
			        "updateDate": null
			      }
			    ]
			  }
			}

## 新增程序（管理员） [POST /program/create]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"name": Docker Container服务,
				"remark": 容器服务提供,
				"ip": 192.168.100.30,
				"port": 2365
			}

	+ Schema

            {
				"name": "程序名",
				"remark": "备注",
				"ip": "IP地址",
				"port": "端口号"
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 更新程序（管理员） [PUT /program/update]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

	+ Body

	        {
				"id": 4
				"name": Docker Container,
				"remark": 容器服务提供,
				"ip": 192.168.100.30,
				"port": 2365
			}

	+ Schema

            {
				"id": 程序ID，必填
				"name": "程序名",
				"remark": "备注",
				"ip": "IP地址",
				"port": "端口号"
			}

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": null
			}

## 删除程序（管理员） [POST /program/delete]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA


	+ Body

	        {
				"ids": [1121,2313,34141]
			}

	+ Schema

            {
				"ids": ID数组，整型，不能为空
			}

+ Response 200 (application/json)
    
    + Body

			{
			    "code": 0,
			    "message": "成功",
			    "data": {
			        "success": 2,
			        "error": 0
			    }
			}

	+ Schema

            {
				"success": "成功记录数",
				"error": "失败记录数"
			}

# Group 枚举管理

## 角色列表 [GET /enums/role]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "1": "ROLE_USER",
			    "2": "ROLE_SYSTEM"
			  }
			}

## 状态码列表 [GET /enums/result]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "0": "成功",
			    "8": "邮箱不合法",
			    "9": "JSON解析错误",
			    "10": "鉴权错误",
			    "11": "权限错误",
			    "12": "参数错误",
			    "13": "网络错误",
			    "14": "请求超时",
			    "15": "请求错误",
			    "16": "上传类型错误",
			    "17": "数据更新错误",
			    "18": "数据插入错误",
			    "19": "数据删除错误",
			    "20": "其他错误",
			    "21": "用户名或密码错误",
			    "22": "用户被冻结，请联系管理员",
			    "23": "注册失败，用户名已注册",
			    "24": "注册失败，邮箱已注册",
			    "25": "邮件发送错误",
			    "27": "邮件验证错误，用户已注册或验证时间已过期",
			    "28": "token未被服务器接受，请重新登陆",
			    "29": "token已过期，请重新登陆",
			    "30": "token读取失败，请重试",
			    "31": "创建项目失败",
			    "32": "删除项目失败",
			    "33": "项目不存在",
			    "34": "没有权限访问项目",
			    "35": "Docker超时",
			    "36": "Docker异常",
			    "37": "获取监控数据错误",
			    "40": "镜像不存在",
			    "41": "查看镜像信息错误,未找到此镜像",
			    "42": "导入镜像错误，镜像名本地已存在",
			    "43": "导入镜像错误，文件上传失败或导入异常",
			    "44": "push镜像失败",
			    "45": "pull镜像错误，本地已存在",
			    "46": "pull镜像失败",
			    "47": "镜像上传失败，公有镜像不支持上传",
			    "48": "镜像上传失败，镜像已经存在",
			    "49": "删除Hub上镜像失败",
			    "50": "删除镜像错误，没有权限",
			    "51": "删除镜像错误，有容器正在使用该镜像",
			    "52": "删除镜像错误",
			    "53": "镜像异常",
			    "60": "输入端口错误，请检查端口是否合法、是否可用，暴露端口是否均设置",
			    "61": "容器不存在",
			    "62": "容器状态拒绝操作",
			    "63": "容器启动失败",
			    "64": "用户身份获取失败",
			    "65": "容器正运行，操作被拒绝",
			    "66": "容器已经暂停，操作被拒绝",
			    "67": "容器已经停止，操作被拒绝",
			    "68": "容器尚未运行，操作被拒绝",
			    "69": "容器状态错误",
			    "70": "获取数据卷列表失败",
			    "71": "数据卷不存在",
			    "72": "数据卷上传失败",
			    "73": "该数据卷不支持查看",
			    "74": "数据卷信息错误",
			    "80": "网络名已存在",
			    "81": "网络名不合法，只能为字母或数字",
			    "82": "Host网络已存在，只允许存在一个",
			    "83": "公共网络创建失败",
			    "84": "用户网络创建失败",
			    "85": "网络不存在",
			    "86": "删除网络错误",
			    "87": "Bridge网络不支持删除，为预定义网络",
			    "88": "连接网络错误",
			    "89": "取消连接网络错误",
			    "90": "网络连接拒绝，没有权限",
			    "91": "网络取消连接拒绝，没有权限",
			    "92": "公共网络创建失败，Driver无效",
			    "93": "删除网络错误,请先清空网络内容器或服务",
			    "94": "容器网络同步失败",
			    "100": "服务不存在",
			    "101": "服务查询失败",
			    "102": "服务名不合法，只能为字母或数字",
			    "103": "服务名不合法，已经存在",
			    "104": "服务创建失败",
			    "110": "通知标题或内容不能为空",
			    "111": "通知标题不能超过50个字符",
			    "112": "通知类型错误",
			    "113": "通知接收用户不能为空",
			    "114": "读取通知错误",
			    "115": "通知内容不能超过65535个字符"
			  }
			}

## 系统日志类型列表 [GET /enums/log/sys]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "10": "创建项目",
			    "11": "删除项目",
			    "20": "创建容器",
			    "21": "删除容器",
			    "23": "删除镜像",
			    "24": "从DockerHub拉取镜像",
			    "25": "上传镜像到DockerHub",
			    "26": "导入镜像",
			    "30": "创建仓储",
			    "31": "删除仓储",
			    "40": "上传镜像到Hub",
			    "41": "拉取镜像从Hub",
			    "42": "删除Hub上镜像",
			    "50": "清理数据卷",
			    "60": "创建公共网络",
			    "61": "创建公共网络失败",
			    "62": "删除网络失败",
			    "80": "冻结用户",
			    "81": "取消冻结用户",
			    "90": "删除服务",
			    "91": "创建服务"
			  }
			}

## 项目日志类型列表 [GET /enums/log/project]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "10": "创建项目",
			    "11": "修改项目信息",
			    "20": "创建容器",
			    "21": "创建容器失败",
			    "22": "开启容器",
			    "23": "开启容器失败",
			    "24": "暂停容器",
			    "25": "暂停容器失败",
			    "26": "恢复容器",
			    "27": "恢复容器失败",
			    "28": "停止容器",
			    "29": "停止容器失败",
			    "30": "强制停止容器",
			    "31": "强制停止容器失败",
			    "32": "删除容器",
			    "33": "删除容器失败",
			    "34": "重启容器",
			    "35": "重启容器失败",
			    "36": "删除服务",
			    "37": "删除服务失败",
			    "38": "新建服务",
			    "39": "新建服务失败"
			  }
			}

## 镜像类型列表 [GET /enums/image]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "1": "公共镜像",
			    "2": "用户镜像"
			  }
			}

## WebSocket消息类型列表 [GET /enums/webSocket]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "0": "容器操作",
			    "1": "系统镜像操作",
			    "2": "Hub镜像操作",
			    "3": "服务操作",
			    "4": "通知操作"
			  }
			}

## 容器状态列表 [GET /enums/container]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "0": "容器关闭",
			    "1": "容器运行",
			    "2": "容器暂停",
			    "3": "容器被删除"
			  }
			}

## 数据卷类型列表 [GET /enums/volumes]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "1": "容器数据卷",
			    "2": "服务数据卷"
			  }
			}

## 通知类型列表 [GET /enums/notice]

+ Request

	+ Headers
	
			Content-Type: application/x-www-form-urlencoded
			Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOiIxIiwicmlkIjoyLCJleHAiOjE1MzAzMjYyNjgsImlhdCI6MTUzMDMyMjY2OH0.n859Es5KcUsiXyKNS9KMbaKa549EI5Hpb3jDv0QV7Q-Q1weDkRiv6yqOlpbqBLNJYC3yPNEp2ben8SOXvIcvzA

+ Response 200 (application/json)
    
    + Body

	        {
			  "code": 0,
			  "message": "成功",
			  "data": {
			    "1": "系统通知",
			    "2": "容器通知",
			    "3": "服务通知",
			    "4": "其他通知"
			  }
			}